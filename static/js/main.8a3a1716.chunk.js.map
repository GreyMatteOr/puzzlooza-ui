{"version":3,"sources":["rainbow.jpg","dragmove.js","Components/Group/Group.js","Components/App/App.js","Components/Puzzle/Puzzle.js","index.js"],"names":["_loaded","_mouseLoc","_callbacks","_isTouch","undefined","window","ontouchstart","dragmove","target","handler","ioClient","onStart","onEnd","document","addEventListener","e","c","touches","clientX","clientY","Object","entries","forEach","func","on","rotate","code","elementFromPoint","id","isMoving","hasStarted","startX","startY","lastX","lastY","handleMouseDown","stopPropagation","preventDefault","dataset","dragEnabled","offsetLeft","offsetTop","parseInt","style","left","top","x","y","dragBoundary","innerWidth","offsetWidth","innerHeight","offsetHeight","emit","removeEventListener","tileID","rotation","tile","getElementById","classList","contains","element","parentNode","transform","reduceRotationNumber","rnum","Group","client","props","checkMatch","groupX","groupY","height","width","col","gridColumn","row","gridRow","maxCol","Math","ceil","maxRow","h","w","pointOfRotation","xPrime","rotate90Degrees","groupXPrime","groupYPrime","rNum","0","1","2","3","sideCheckData","bottom","shoveXY","refNames","right","refPoints","tilesOnCenter","elementsFromPoint","side","ref1","ref2","tilesOnRef1","tilesOnRef2","filter","tile1","i1","i2","indexOf","includes","shove","grouping","current","conversion","realSide","getRotatedSide","join","splice","concat","checkOverlap","noMove","center","shoveSpots","random","floor","length","moveTile","joinGroup","referenceCol","referenceRow","split","map","num","children","yPrime","newCol","newRow","tiles","unshift","emptyRow","Array","fill","push","append","removeChild","unregister","zIndex","handlerTile","canvas","updateGrid","delete","React","createRef","groupRef","this","drawTile","funcElevator","isNaN","ctx","getContext","dx","dy","image","drawImage","newX","newY","maxX","maxY","oldX","oldY","min","max","setTimeout","baseTile","gridTemplateColumns","gridTemplateRows","coordinates","className","data-drag-boundary","data-rotation","ref","display","data-bottom","data-left","data-right","data-top","Component","Puzzle","createGroups","xSplits","ySplits","puzzleImg","xOffset","yOffset","xLeftover","yLeftover","groups","groupRefs","saveGroupCombiner","setState","groupID","newGroups","state","doneLoadingPic","loadingPicture","arrangeGroups","sendData","loadingRoom","combineGroups","moveGroup","group","node","identity","tileParentID","group1ID","group2ID","joinTileID","combiner","groupCombiners","joinFrom","getRoomData","requester","roomData","src","rainbow","onLoad","values","App","componentDidMount","ioc","connect","console","log","connected","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a3a1716.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rainbow.ccc2084b.jpg\";","// https://github.com/knadh/dragmove.js\n// Kailash Nadh (c) 2020.\n// Modified by Matthew Lane 2020.\n// MIT License.\n\nlet _loaded = false;\nlet _mouseLoc = [0,0]\nlet _callbacks = {};\nlet _rotationCB = {};\nconst _isTouch = window.ontouchstart !== undefined;\n\nexport const dragmove = function(target, handler, ioClient, onStart, onEnd) {\n  // Register a global event to capture mouse moves (once).\n  if (!_loaded) {\n    document.addEventListener(_isTouch ? \"touchmove\" : \"mousemove\", function(e) {\n      let c = e;\n      if (e.touches) {\n        c = e.touches[0];\n      }\n\n      // On mouse move, save the last coordinates\n      _mouseLoc = [c.clientX, c.clientY]\n\n      // On mouse move, dispatch the coords to all registered callbacks.\n      Object.entries(_callbacks).forEach( ( [key, func] ) => {\n        func(c.clientX, c.clientY);\n      })\n    });\n    ioClient.on('rotate', rotate);\n\n    document.addEventListener(\"keydown\", function(e) {\n      if (e.code === \"KeyZ\") rotate( document.elementFromPoint( ..._mouseLoc ).id, 1, ioClient );\n      if (e.code === \"KeyX\") rotate( document.elementFromPoint( ..._mouseLoc ).id, -1, ioClient );\n    });\n  }\n\n  _loaded = true;\n  let isMoving = false, hasStarted = false;\n  let startX = 0, startY = 0, lastX = 0, lastY = 0;\n\n  // On the first click and hold, record the offset of the pointer in relation\n  // to the point of click inside the element.\n  function handleMouseDown(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (target.dataset.dragEnabled === \"false\") {\n      return;\n    }\n\n    let c = e;\n    if (e.touches) {\n      c = e.touches[0];\n    }\n\n    isMoving = true;\n    startX = target.offsetLeft - c.clientX;\n    startY = target.offsetTop - c.clientY;\n  }\n\n  handler.addEventListener(_isTouch ? \"touchstart\" : \"mousedown\", handleMouseDown);\n\n  // On leaving click, stop moving.\n  target.addEventListener(_isTouch ? \"touchend\" : \"mouseup\", function() {\n    isMoving = false;\n    hasStarted = false;\n\n    if (onEnd) {\n      onEnd(target, handler, parseInt(target.style.left), parseInt(target.style.top));\n    }\n  });\n\n  // Register mouse-move callback to move the element.\n  _callbacks[handler.id] = function move(x, y) {\n    if (!isMoving) {\n      return;\n    }\n\n    if (!hasStarted) {\n      hasStarted = true;\n      if (onStart) {\n        onStart(target, lastX, lastY);\n      }\n    }\n\n    lastX = x + startX;\n    lastY = y + startY;\n\n    // If boundary checking is on, don't let the element cross the viewport.\n    if (target.dataset.dragBoundary === \"true\") {\n      if (lastX < 1 || lastX >= window.innerWidth - target.offsetWidth) {\n        return;\n      }\n      if (lastY < 1 || lastY >= window.innerHeight - target.offsetHeight) {\n        return;\n      }\n    }\n\n    target.style.left = lastX + \"px\";\n    target.style.top = lastY + \"px\";\n    ioClient.emit('move', target.id ,lastX + \"px\", lastY + \"px\")\n  };\n\n  return function unregister(handler) {\n    handler.removeEventListener(\"mousedown\", handleMouseDown);\n    delete _callbacks[handler.id]\n  }\n}\n\nfunction rotate(tileID, rotation, ioClient) {\n  let tile = document.getElementById(tileID)\n  if (tile && tile.classList.contains('tile')) {\n    if (ioClient) ioClient.emit( 'rotate', tileID, rotation )\n    let element = tile.parentNode;\n    element.dataset.rotation = parseInt( element.dataset.rotation ) + rotation\n    element.style.transform = `rotate(${element.dataset.rotation * -90}deg)`\n  }\n}\n","import { dragmove } from \"../../dragmove\";\nimport React, { Component } from \"react\";\nimport \"./Group.css\";\n\nclass Group extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.grouping = this.props.groupRef;\n    this.tiles = [];\n  }\n\n  componentDidMount() {\n    this.drawTile(this.canvas.current);\n    this.props.funcElevator(this.grouping.current.id, this.join);\n    this.tiles.push([this.canvas.current]);\n    this.unregister = dragmove(\n      this.grouping.current,\n      this.canvas.current,\n      this.props.client,\n      () => this.grouping.current.style.zIndex = 2,\n      (grouping, handlerTile, x, y) => {\n        if (isNaN(x)) x = 1;\n        if (isNaN(y)) y = 1;\n        this.grouping.current.style.zIndex = 0;\n        this.checkMatch( handlerTile, x, y );\n      }\n    );\n  }\n\n  checkMatch = ( tile, groupX, groupY) => {\n    let height = tile.offsetHeight;\n    let width = tile.offsetWidth;\n    let col = parseInt(tile.style.gridColumn);\n    let row = parseInt(tile.style.gridRow);\n    let maxCol = Math.ceil( tile.parentNode.offsetWidth / width );\n    let maxRow = Math.ceil( tile.parentNode.offsetHeight / height );\n    let [ groupXPrime, groupYPrime ] = rotate90Degrees( groupX, groupY, tile.parentNode.offsetHeight, tile.parentNode.offsetWidth );\n    let rNum = reduceRotationNumber( tile.parentNode.dataset.rotation );\n\n    let x = {\n      0: groupX + ( (col - 1) * width ),\n      1: groupXPrime + ( (row - 1) * width ),\n      2: groupX + ( (maxCol - col) * width ),\n      3: groupXPrime + ( (maxRow - row) * width )\n    }[rNum];\n    let y = {\n      0: groupY + ( (row - 1) * height ),\n      1: groupYPrime + ( (maxCol - col) * height ),\n      2: groupY + ( (maxRow - row) * height ),\n      3: groupYPrime + ( (col - 1) * height )\n    }[rNum]\n\n    const sideCheckData = {\n      bottom: { shoveXY: [ null,(y+height+3) ], refNames: ['bBL', 'bBR'] },\n      left: { shoveXY: [ (x-width-3), null ], refNames: ['lBL', 'lTL'] },\n      right: { shoveXY: [ (x+width+3), null ], refNames: ['rBR', 'rTR'] },\n      top: { shoveXY: [ null,(y-height-3) ], refNames: ['tTL', 'tTR'] }\n    };\n    const sides = ['bottom', 'left', 'right', 'top'];\n    const refPoints = {\n      'bBL':  [ (x + (0.2 * width)), (y + (height + 3)) ],\n      'bBR':  [ (x + (0.8 * width)), (y + (height + 3)) ],\n      'center': [ (x + ((1/2) * width)), (y + ((1/2) * height)) ],\n      'lBL':  [ (x - 3), (y + (0.8 * height)) ],\n      'lTL':  [ (x - 3), (y + (0.2 * height)) ],\n      'rBR':  [ (x + width + 1), (y + (0.8 * height)) ],\n      'rTR':  [ (x + width + 1), (y + (0.2 * height)) ],\n      'tTL':  [ (x + (0.2 * width)), (y - 1) ],\n      'tTR':  [ (x + (0.8 * width)), (y - 1) ],\n    };\n    const tilesOnCenter = document.elementsFromPoint( ...refPoints['center'] );\n\n    sides.forEach( side => {\n      let { shoveXY, refNames } = sideCheckData[side];\n      let ref1 = refPoints[ refNames[0] ];\n      let ref2 = refPoints[ refNames[1] ];\n      let tilesOnRef1 = document.elementsFromPoint( ...ref1 );\n      let tilesOnRef2 = document.elementsFromPoint( ...ref2 );\n\n      tilesOnRef1 = tilesOnRef1.filter( (tile1, i1) => {\n        let i2 = tilesOnRef2.indexOf( tile1 );\n        if ( i2 >= 0 ) {\n          if (tilesOnCenter.includes( tile1 )) {\n            this.shove(tile1, ...shoveXY)\n          }\n          else if (\n            tile1.classList.contains('tile') &&\n            this.grouping.current.id !== tile1.parentNode.id &&\n            getRotatedSide(tile, side) === tile1.id &&\n            reduceRotationNumber(rNum) === reduceRotationNumber(tile1.parentNode.dataset.rotation)\n           ) {\n            this.join(tile, tile1.parentNode)\n          }\n          tilesOnRef2.splice(i2, 1);\n          return false;\n        }\n\n        return true;\n      });\n\n      let leftOvers = tilesOnRef1.concat( tilesOnRef2 );\n      leftOvers.forEach( tile => this.shove(tile, ...shoveXY) );\n    });\n  }\n\n  checkOverlap = ( height, width, x, y, noMove) => {\n    const center =   [ (x + ((1/2) * width)), (y + ((1/2) * height)) ];\n    const shoveSpots = [\n      [ x, (y+height+3) ],\n      [ (x-width-3), y ],\n      [ (x+width+3), y ],\n      [ x, (y-height-3) ]\n    ];\n    const tilesOnCenter = document.elementsFromPoint( ...center )\n    tilesOnCenter.forEach( tile => {\n      if ( tile.id !== noMove ) {\n        let random = Math.floor( Math.random() * shoveSpots.length )\n        let shoveXY = shoveSpots[ random ]\n        this.shove( tile, ...shoveXY );\n      }\n    });\n  }\n\n  drawTile(canvas) {\n    let ctx = canvas.getContext(\"2d\");\n    let { dx, dy, image, x, y } = this.props;\n    ctx.drawImage(image, x, y, dx, dy, 0, 0, 300, 150);\n  }\n\n  join = ( moveTile, joinGroup, emit = true ) => {\n    if (emit) this.props.client.emit('combine', this.grouping.current.id, joinGroup.id, moveTile.id);\n    let referenceCol = parseInt( moveTile.style.gridColumn );\n    let referenceRow = parseInt( moveTile.style.gridRow );\n    let startX = parseInt( moveTile.parentNode.style.left );\n    let startY = parseInt( moveTile.parentNode.style.top );\n    let [x, y] = moveTile.id.split(\",\").map( (num) => parseInt(num) );\n\n    [...joinGroup.children].forEach( tile => {\n      let [xPrime, yPrime] = tile.id.split(\",\").map( (num) => parseInt(num) );\n      let [relativePosX, relativePosY] = [xPrime - x, yPrime - y];\n      let newCol = relativePosX + referenceCol;\n      let newRow = relativePosY + referenceRow;\n\n      while (newCol < 1) {\n        this.tiles.forEach( row => row.unshift( null ) )\n        newCol++;\n        referenceCol++;\n      }\n      while (newRow < 1) {\n        let emptyRow = new Array(this.tiles[0].length).fill(null);\n        this.tiles.unshift(emptyRow);\n        newRow++;\n        referenceRow++;\n      }\n      while (newCol > this.tiles[0].length) {\n        this.tiles.forEach( row => row.push( null ) )\n      }\n      while (newRow > this.tiles.length) {\n        let emptyRow = new Array(this.tiles[0].length).fill(null);\n        this.tiles.push(emptyRow);\n      }\n      this.tiles[newRow - 1][newCol - 1] = tile;\n      this.grouping.current.append( joinGroup.removeChild(tile) )\n      this.unregister(tile);\n      dragmove(\n        this.grouping.current,\n        tile,\n        this.props.client,\n        () => this.grouping.current.style.zIndex = 1,\n        (grouping, handlerTile, x, y) => {\n          this.checkMatch( handlerTile, x, y );\n          this.grouping.current.style.zIndex = 0;\n        }\n      )\n    })\n\n    this.canvas.current.style.gridColumn = referenceCol;\n    this.canvas.current.style.gridRow = referenceRow;\n    this.updateGrid( moveTile, this.tiles, startX, startY);\n    this.props.delete(joinGroup.id)\n  }\n\n  shove(tile, newX, newY) {\n    if ( tile.classList.contains('tile') && this.grouping.current.id !== tile.parentNode.id ) {\n      let grouping = tile.parentNode\n      let maxX = window.innerWidth - grouping.offsetWidth;\n      let maxY = window.innerHeight - grouping.offsetHeight;\n      let oldX = parseInt(grouping.style.left) || 1;\n      let oldY = parseInt(grouping.style.top) || 1;\n      newX = ( newX === null ? oldX : Math.min( Math.max(newX, 1), maxX) );\n      newY = ( newY === null ? oldY : Math.min( Math.max(newY, 1), maxY) );\n      grouping.style.top = newY + \"px\";\n      grouping.style.left = newX + \"px\";\n      window.setTimeout(\n        () => this.checkOverlap(grouping.offsetHeight, grouping.offsetWidth, newX, newY, tile.id),\n        0\n      );\n    }\n  }\n\n  updateGrid( baseTile, tiles, startX, startY ) {\n    for (let row = 0; row < tiles.length; row++) {\n      for (let col = 0; col < tiles[0].length; col++) {\n        let tile = tiles[row][col];\n        if (tile !== null) {\n          tile.style.gridColumn = col + 1;\n          tile.style.gridRow = row + 1;\n        }\n      }\n    }\n    let { style } = this.grouping.current;\n    style.gridTemplateColumns = tiles[0].length;\n    style.gridTemplateRows = tiles.length;\n    style.height = (tiles.length * 100) + \"px\";\n    style.left = startX - ( (parseInt(baseTile.style.gridColumn) - 1) * 100 ) + 'px';\n    style.top = startY - ( (parseInt(baseTile.style.gridRow) - 1) * 100 ) + 'px';\n    style.width = (tiles[0].length * 100) + \"px\";\n  }\n\n  render() {\n    let [x, y] = this.props.coordinates.split(\",\").map( (num) => parseInt(num) );\n    return (\n      <div\n        className=\"canvas-grouping\"\n        data-drag-boundary='true'\n        data-rotation={0}\n        id={`${x}-${y}`}\n        ref={this.grouping}\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1\",\n          gridTemplateRows: \"1\"\n        }}>\n        <canvas\n          className=\"tile\"\n          data-bottom={`${x},${y + 1}`}\n          data-left={`${x - 1},${y}`}\n          data-right={`${x + 1},${y}`}\n          data-top={`${x},${y - 1}`}\n          id={this.props.coordinates}\n          ref={this.canvas}\n          style={{\n            gridColumn: '1',\n            gridRow: '1'\n          }}>\n        </canvas>\n      </div>\n    );\n  }\n}\n\nfunction getRotatedSide(tile, side) {\n  let conversion = {bottom:2, left:3, right:1, top:0}[side]\n  let dir = reduceRotationNumber( parseInt( tile.parentNode.dataset.rotation ) + conversion )\n  let realSide = {0:'top', 1:'right', 2:'bottom', 3:'left'}[dir]\n  return tile.dataset[realSide]\n}\n\nfunction reduceRotationNumber(rnum) {\n  rnum = parseInt(rnum)\n  return (((rnum % 4) + 4) % 4)\n}\n\nfunction rotate90Degrees( x, y, h, w ) {\n  let pointOfRotation = [\n    x + (w / 2),\n    y + (h / 2)\n  ]\n  let xPrime = x - pointOfRotation[0];\n  let yPrime = y - pointOfRotation[1];\n  return [yPrime + pointOfRotation[0], xPrime + pointOfRotation[1] ]\n}\n\nexport default Group;\n","import './App.css';\nimport ioc from 'socket.io-client';\nimport Puzzle from '../Puzzle/Puzzle.js';\nimport React, { Component } from 'react';\n\nlet client;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {connected: false};\n  }\n\n  componentDidMount = () => {\n    // client = ioc.connect( \"localhost:3003\");\n    client = ioc.connect( \"https://puzzlooza.herokuapp.com/\" );\n    console.log('Attempting to connect...')\n    client.on( 'connect', (state) => {\n      console.log('Connected to server. ID:', client.id);\n      this.setState( {connected: true} )\n    });\n  }\n\n  render() {\n    if (!this.state.connected) return <h1>Connecting to server...</h1>\n    return (\n      <div className=\"App\">\n        <Puzzle client={client}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport './Puzzle.css';\nimport rainbow from '../../rainbow.jpg';\nimport Group from '../Group/Group.js';\n\nclass Puzzle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingPicture: true,\n      loadingRoom: true,\n      groups: {}\n    }\n    this.groupCombiners = {};\n    this.groupRefs = {};\n  }\n\n  createGroups = (xSplits, ySplits, puzzleImg) => {\n    let {width, height} = puzzleImg;\n    let dx = Math.floor( width / xSplits );\n    let dy = Math.floor( height / ySplits );\n    let xLeftover = width % dx\n    let yLeftover = height % dy\n    let xOffset, yOffset, groups = {};\n    for (let y = 0; y < ySplits; y++) {\n      for (let x = 0; x < xSplits; x++) {\n        let ref = React.createRef();\n        if (xLeftover) {\n          xOffset = x;\n          xLeftover--;\n        }\n        if (yLeftover) {\n          yOffset = y;\n          yLeftover--;\n        }\n        this.groupRefs[`${x}-${y}`] = ref;\n        groups[`${x}-${y}`] = (\n          <Group\n            client={this.props.client}\n            coordinates={`${x},${y}`}\n            delete={this.delete}\n            dx={dx}\n            dy={dy}\n            funcElevator={this.saveGroupCombiner}\n            image={puzzleImg}\n            groupRef={ref}\n            key={`${x},${y}`}\n            x= { (x * dx) + xOffset }\n            y= { (y * dy) + yOffset }\n          />\n        )\n      }\n    }\n    this.setState( {groups} );\n  }\n\n  delete = (groupID) => {\n    let newGroups = { ...this.state.groups}\n    delete newGroups[groupID]\n    delete this.groupRefs[groupID]\n    this.setState( {groups: newGroups} )\n  }\n\n  doneLoadingPic = (e) => {\n    this.createGroups(9, 6, e.target);\n    this.setState( {loadingPicture: false} );\n    this.props.client.on('roomData', this.arrangeGroups);\n    this.props.client.on('dataRequest', this.sendData);\n    this.props.client.on('newRoom', () => {\n      this.setState( {loadingRoom: false} )\n    })\n    this.props.client.on('combine', this.combineGroups);\n    this.props.client.on('move', this.moveGroup);\n  }\n\n  arrangeGroups = (groups) => {\n    groups.forEach( group => {\n      let node = this.groupRefs[group.groupID].current\n      node.dataset.rotation = group.rotation;\n      node.style.transform = `rotate(${node.dataset.rotation * -90}deg)`\n      node.style.top = group.top;\n      node.style.left = group.left;\n\n      let identity = group.groupID.split('-').join(',');\n      group.tiles.forEach( tileID => {\n        if (tileID === identity) return;\n        let tileParentID = tileID.split(',').join('-');\n        this.combineGroups(group.groupID, tileParentID, identity);\n      });\n    });\n\n    this.setState( {loadingRoom: false} )\n  }\n\n  combineGroups = (group1ID, group2ID, joinTileID) => {\n    let combiner = this.groupCombiners[group1ID];\n    let joinFrom = this.groupRefs[group2ID];\n    if (joinFrom) combiner(document.getElementById( joinTileID ), joinFrom.current, false);\n  }\n\n  getRoomData = () => {\n    this.props.client.emit('getRoomData')\n    return <h1>Loading Room Data </h1>\n  }\n\n  moveGroup = (groupID, newX, newY) => {\n    let group = this.groupRefs[groupID];\n    group.current.style.left = newX;\n    group.current.style.top = newY;\n  }\n\n  sendData = (requester) => {\n    let roomData = Object.entries(this.groupRefs).map( ([groupID, group]) => {\n      let tiles = [...group.current.children].map( tile => tile.id )\n      return {\n        groupID,\n        tiles,\n        rotation: group.current.dataset.rotation,\n        top: group.current.style.top,\n        left: group.current.style.left\n      }\n    });\n    this.props.client.emit('returnRoomData', requester, roomData)\n  }\n\n  render() {\n    if (this.state.loadingPicture) {\n      let puzzleImg = <img src={rainbow} onLoad={this.doneLoadingPic} />\n      return (\n        <>\n          <h1>Loading Puzzle Tiles</h1>\n          {puzzleImg}\n        </>\n      )\n    }\n\n    if (this.state.loadingRoom) {\n      {this.getRoomData()}\n    }\n\n    return (\n      <>\n        {Object.values( this.state.groups )}\n      </>\n    )\n  }\n\n  saveGroupCombiner = (groupID, combiner) => {\n    this.groupCombiners[groupID] = combiner;\n  }\n}\n\nexport default Puzzle;\n","import App from './Components/App/App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}