{"version":3,"sources":["Components/App/App.js","rainbow.jpg","dragmove.js","Components/Tile/Tile.js","Components/Puzzle/Puzzle.js","index.js"],"names":["client","_loaded","_callbacks","_isTouch","undefined","window","ontouchstart","dragmove","target","handler","onStart","onEnd","document","addEventListener","e","c","touches","Object","entries","forEach","func","clientX","clientY","isMoving","hasStarted","startX","startY","lastX","lastY","handleMouseDown","stopPropagation","preventDefault","dataset","dragEnabled","offsetLeft","offsetTop","parseInt","style","left","top","id","x","y","dragBoundary","innerWidth","offsetWidth","innerHeight","offsetHeight","emit","removeEventListener","Tile","props","checkMatch","tile","groupX","groupY","height","width","gridColumn","gridRow","sideCheckData","bottom","shoveXY","refNames","right","refPoints","tilesOnCenter","elementsFromPoint","side","ref1","ref2","tilesOnRef1","tilesOnRef2","filter","tile1","i1","i2","indexOf","includes","shove","classList","contains","grouping","current","parentNode","join","splice","concat","checkOverlap","noMove","center","shoveSpots","random","Math","floor","length","moveTile","joinGroup","referenceCol","referenceRow","split","map","num","children","xPrime","yPrime","newCol","newRow","tiles","row","unshift","emptyRow","Array","fill","push","append","removeChild","unregister","zIndex","handlerTile","canvas","updateGrid","delete","React","createRef","groupRef","this","drawTile","funcElevator","isNaN","ctx","getContext","dx","dy","image","drawImage","newX","newY","maxX","maxY","oldX","oldY","min","max","setTimeout","baseTile","col","gridTemplateColumns","gridTemplateRows","coordinates","className","data-drag-boundary","ref","display","data-bottom","data-left","data-right","data-top","Component","Puzzle","createTiles","xSplits","ySplits","puzzleImg","xOffset","yOffset","xLeftover","yLeftover","tileRefs","saveTileCombiner","setState","groupID","newTiles","state","doneLoadingPic","loadingPicture","on","group1ID","group2ID","joinTileID","combineGroups","moveGroup","combiner","tileCombiners","joinFrom","getElementById","group","src","rainbow","onLoad","values","App","componentDidMount","ioc","connect","console","log","connected","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7493795f.chunk.js","sourcesContent":["import './App.css';\nimport ioc from 'socket.io-client';\nimport Puzzle from '../Puzzle/Puzzle.js';\nimport React, { Component } from 'react';\n\nlet client;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {connected: false};\n  }\n\n  componentDidMount = () => {\n    // client = ioc.connect( \"localhost:3001\");\n    client = ioc.connect( \"https://puzzlooza.herokuapp.com/\" );\n    console.log('Attempting to connect...')\n    client.on( 'connect', (state) => {\n      console.log('Connected to server.');\n      this.setState( {connected: true} )\n    });\n  }\n\n  render() {\n    if (!this.state.connected) return <h1>Connecting to server...</h1>\n    return (\n      <div className=\"App\">\n        <Puzzle client={client}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/rainbow.ccc2084b.jpg\";","// https://github.com/knadh/dragmove.js\n// Kailash Nadh (c) 2020.\n// MIT License.\n\nlet _loaded = false;\nlet _callbacks = {};\nconst _isTouch = window.ontouchstart !== undefined;\n\nexport const dragmove = function(target, handler, client, onStart, onEnd) {\n  // Register a global event to capture mouse moves (once).\n  if (!_loaded) {\n    document.addEventListener(_isTouch ? \"touchmove\" : \"mousemove\", function(e) {\n      let c = e;\n      if (e.touches) {\n        c = e.touches[0];\n      }\n\n      // On mouse move, dispatch the coords to all registered callbacks.\n      Object.entries(_callbacks).forEach( ( [key, func] ) => {\n        func(c.clientX, c.clientY);\n      })\n    });\n  }\n\n  _loaded = true;\n  let isMoving = false, hasStarted = false;\n  let startX = 0, startY = 0, lastX = 0, lastY = 0;\n\n  // On the first click and hold, record the offset of the pointer in relation\n  // to the point of click inside the element.\n\n  function handleMouseDown(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (target.dataset.dragEnabled === \"false\") {\n      return;\n    }\n\n    let c = e;\n    if (e.touches) {\n      c = e.touches[0];\n    }\n\n    isMoving = true;\n    startX = target.offsetLeft - c.clientX;\n    startY = target.offsetTop - c.clientY;\n  }\n\n  handler.addEventListener(_isTouch ? \"touchstart\" : \"mousedown\", handleMouseDown);\n\n  // On leaving click, stop moving.\n  target.addEventListener(_isTouch ? \"touchend\" : \"mouseup\", function() {\n    isMoving = false;\n    hasStarted = false;\n\n    if (onEnd) {\n      onEnd(target, handler, parseInt(target.style.left), parseInt(target.style.top));\n    }\n  });\n\n  // Register mouse-move callback to move the element.\n  _callbacks[handler.id] = function move(x, y) {\n    if (!isMoving) {\n      return;\n    }\n\n    if (!hasStarted) {\n      hasStarted = true;\n      if (onStart) {\n        onStart(target, lastX, lastY);\n      }\n    }\n\n    lastX = x + startX;\n    lastY = y + startY;\n\n    // If boundary checking is on, don't let the element cross the viewport.\n    if (target.dataset.dragBoundary === \"true\") {\n      if (lastX < 1 || lastX >= window.innerWidth - target.offsetWidth) {\n        return;\n      }\n      if (lastY < 1 || lastY >= window.innerHeight - target.offsetHeight) {\n        return;\n      }\n    }\n\n    target.style.left = lastX + \"px\";\n    target.style.top = lastY + \"px\";\n    client.emit('move', target.id ,lastX + \"px\", lastY + \"px\")\n  };\n\n  return function unregister(handler) {\n    handler.removeEventListener(\"mousedown\", handleMouseDown);\n    delete _callbacks[handler.id]\n  }\n}\n","import { dragmove } from \"../../dragmove\";\nimport React, { Component } from \"react\";\nimport \"./Tile.css\";\n\nclass Tile extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.grouping = this.props.groupRef;\n    this.tiles = [];\n  }\n\n  componentDidMount() {\n    this.drawTile(this.canvas.current);\n    this.props.funcElevator(this.grouping.current.id, this.join);\n    this.tiles.push([this.canvas.current]);\n    this.unregister = dragmove(\n      this.grouping.current,\n      this.canvas.current,\n      this.props.client,\n      () => this.grouping.current.style.zIndex = 2,\n      (grouping, handlerTile, x, y) => {\n        if (isNaN(x)) x = 1;\n        if (isNaN(y)) y = 1;\n        this.grouping.current.style.zIndex = 0;\n        this.checkMatch( handlerTile, x, y );\n      }\n    );\n  }\n\n  checkMatch = ( tile, groupX, groupY) => {\n    let height = tile.offsetHeight;\n    let width = tile.offsetWidth;\n    let x = groupX + ( (parseInt(tile.style.gridColumn) - 1) * width );\n    let y = groupY + ( (parseInt(tile.style.gridRow) - 1) * height );\n    const sideCheckData = {\n      bottom: { shoveXY: [ null,(y+height+3) ], refNames: ['bBL', 'bBR'] },\n      left: { shoveXY: [ (x-width-3), null ], refNames: ['lBL', 'lTL'] },\n      right: { shoveXY: [ (x+width+3), null ], refNames: ['rBR', 'rTR'] },\n      top: { shoveXY: [ null,(y-height-3) ], refNames: ['tTL', 'tTR'] }\n    };\n    const sides = ['bottom', 'left', 'right', 'top'];\n    const refPoints = {\n      'bBL':  [ (x + (0.2 * width)), (y + (height + 3)) ],\n      'bBR':  [ (x + (0.8 * width)), (y + (height + 3)) ],\n      'center': [ (x + ((1/2) * width)), (y + ((1/2) * height)) ],\n      'lBL':  [ (x - 3), (y + (0.8 * height)) ],\n      'lTL':  [ (x - 3), (y + (0.2 * height)) ],\n      'rBR':  [ (x + width + 1), (y + (0.8 * height)) ],\n      'rTR':  [ (x + width + 1), (y + (0.2 * height)) ],\n      'tTL':  [ (x + (0.2 * width)), (y - 1) ],\n      'tTR':  [ (x + (0.8 * width)), (y - 1) ],\n    };\n    const tilesOnCenter = document.elementsFromPoint( ...refPoints['center'] );\n\n    sides.forEach( side => {\n      let { shoveXY, refNames } = sideCheckData[side];\n      let ref1 = refPoints[ refNames[0] ];\n      let ref2 = refPoints[ refNames[1] ];\n      let tilesOnRef1 = document.elementsFromPoint( ...ref1 );\n      let tilesOnRef2 = document.elementsFromPoint( ...ref2 );\n\n      tilesOnRef1 = tilesOnRef1.filter( (tile1, i1) => {\n        let i2 = tilesOnRef2.indexOf( tile1 );\n\n        if ( i2 >= 0 ) {\n          if (tilesOnCenter.includes( tile1 )) {\n            this.shove(tile1, ...shoveXY)\n          }\n          else if (\n            tile1.classList.contains('tile') &&\n            this.grouping.current.id !== tile1.parentNode.id &&\n            tile.dataset[side] === tile1.id\n           ) {\n            this.join(tile, tile1.parentNode)\n          }\n          tilesOnRef2.splice(i2, 1);\n          return false;\n        }\n\n        return true;\n      });\n\n      let leftOvers = tilesOnRef1.concat( tilesOnRef2 );\n      leftOvers.forEach( tile => this.shove(tile, ...shoveXY) );\n    });\n  }\n\n  checkOverlap = ( height, width, x, y, noMove) => {\n    const center =   [ (x + ((1/2) * width)), (y + ((1/2) * height)) ];\n    const shoveSpots = [\n      [ x, (y+height+3) ],\n      [ (x-width-3), y ],\n      [ (x+width+3), y ],\n      [ x, (y-height-3) ]\n    ];\n    const tilesOnCenter = document.elementsFromPoint( ...center )\n    tilesOnCenter.forEach( tile => {\n      if ( tile.id !== noMove ) {\n        let random = Math.floor( Math.random() * shoveSpots.length )\n        let shoveXY = shoveSpots[ random ]\n        this.shove( tile, ...shoveXY );\n      }\n    });\n  }\n\n  drawTile(canvas) {\n    let ctx = canvas.getContext(\"2d\");\n    let { dx, dy, image, x, y } = this.props;\n    ctx.drawImage(image, x, y, dx, dy, 0, 0, 300, 150);\n  }\n\n  join = ( moveTile, joinGroup, emit = true ) => {\n    if (emit) this.props.client.emit('combine', this.grouping.current.id, joinGroup.id, moveTile.id);\n    let referenceCol = parseInt( moveTile.style.gridColumn );\n    let referenceRow = parseInt( moveTile.style.gridRow );\n    let startX = parseInt( moveTile.parentNode.style.left );\n    let startY = parseInt( moveTile.parentNode.style.top );\n    let [x, y] = moveTile.id.split(\",\").map( (num) => parseInt(num) );\n\n    [...joinGroup.children].forEach( tile => {\n      let [xPrime, yPrime] = tile.id.split(\",\").map( (num) => parseInt(num) );\n      let [relativePosX, relativePosY] = [xPrime - x, yPrime - y];\n      let newCol = relativePosX + referenceCol;\n      let newRow = relativePosY + referenceRow;\n\n      while (newCol < 1) {\n        this.tiles.forEach( row => row.unshift( null ) )\n        newCol++;\n        referenceCol++;\n      }\n      while (newRow < 1) {\n        let emptyRow = new Array(this.tiles[0].length).fill(null);\n        this.tiles.unshift(emptyRow);\n        newRow++;\n        referenceRow++;\n      }\n      while (newCol > this.tiles[0].length) {\n        this.tiles.forEach( row => row.push( null ) )\n      }\n      while (newRow > this.tiles.length) {\n        let emptyRow = new Array(this.tiles[0].length).fill(null);\n        this.tiles.push(emptyRow);\n      }\n      this.tiles[newRow - 1][newCol - 1] = tile;\n      this.grouping.current.append( joinGroup.removeChild(tile) )\n      this.unregister(tile);\n      dragmove(\n        this.grouping.current,\n        tile,\n        this.props.client,\n        () => this.grouping.current.style.zIndex = 1,\n        (grouping, handlerTile, x, y) => {\n          this.checkMatch( handlerTile, x, y );\n          this.grouping.current.style.zIndex = 0;\n        }\n      )\n    })\n\n    this.canvas.current.style.gridColumn = referenceCol;\n    this.canvas.current.style.gridRow = referenceRow;\n    this.updateGrid( moveTile, this.tiles, startX, startY);\n    this.props.delete(joinGroup.id)\n  }\n\n  shove(tile, newX, newY) {\n    if ( tile.classList.contains('tile') && this.grouping.current.id !== tile.parentNode.id ) {\n      let grouping = tile.parentNode\n      let maxX = window.innerWidth - grouping.offsetWidth;\n      let maxY = window.innerHeight - grouping.offsetHeight;\n      let oldX = parseInt(grouping.style.left) || 1;\n      let oldY = parseInt(grouping.style.top) || 1;\n      newX = ( newX === null ? oldX : Math.min( Math.max(newX, 1), maxX) );\n      newY = ( newY === null ? oldY : Math.min( Math.max(newY, 1), maxY) );\n      grouping.style.top = newY + \"px\";\n      grouping.style.left = newX + \"px\";\n      window.setTimeout(\n        () => this.checkOverlap(grouping.offsetHeight, grouping.offsetWidth, newX, newY, tile.id),\n        0\n      );\n    }\n  }\n\n  updateGrid( baseTile, tiles, startX, startY ) {\n    for (let row = 0; row < tiles.length; row++) {\n      for (let col = 0; col < tiles[0].length; col++) {\n        let tile = tiles[row][col];\n        if (tile !== null) {\n          tile.style.gridColumn = col + 1;\n          tile.style.gridRow = row + 1;\n        }\n      }\n    }\n    let { style } = this.grouping.current;\n    style.gridTemplateColumns = tiles[0].length;\n    style.gridTemplateRows = tiles.length;\n    style.height = (tiles.length * 100) + \"px\";\n    style.left = startX - ( (parseInt(baseTile.style.gridColumn) - 1) * 100 ) + 'px';\n    style.top = startY - ( (parseInt(baseTile.style.gridRow) - 1) * 100 ) + 'px';\n    style.width = (tiles[0].length * 100) + \"px\";\n  }\n\n  render() {\n    let [x, y] = this.props.coordinates.split(\",\").map( (num) => parseInt(num) );\n    return (\n      <div\n        className=\"canvas-grouping\"\n        data-drag-boundary='true'\n        id={`${x}-${y}`}\n        ref={this.grouping}\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1\",\n          gridTemplateRows: \"1\"\n        }}>\n        <canvas\n          className=\"tile\"\n          data-bottom={`${x},${y + 1}`}\n          data-left={`${x - 1},${y}`}\n          data-right={`${x + 1},${y}`}\n          data-top={`${x},${y - 1}`}\n          id={this.props.coordinates}\n          ref={this.canvas}\n          style={{\n            gridColumn: '1',\n            gridRow: '1'\n          }}>\n        </canvas>\n      </div>\n    );\n  }\n}\n\nexport default Tile;\n","import React, { Component } from 'react';\nimport './Puzzle.css';\nimport rainbow from '../../rainbow.jpg';\nimport Tile from '../Tile/Tile.js';\n\nclass Puzzle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingPicture: true,\n      tiles: {}\n    }\n    this.tileCombiners = {};\n    this.tileRefs = {};\n  }\n\n  createTiles = (xSplits, ySplits, puzzleImg) => {\n    let {width, height} = puzzleImg;\n    let dx = Math.floor( width / xSplits );\n    let dy = Math.floor( height / ySplits );\n    let xLeftover = width % dx\n    let yLeftover = height % dy\n    let xOffset, yOffset, tiles = {};\n    for (let y = 0; y < ySplits; y++) {\n      for (let x = 0; x < xSplits; x++) {\n        let ref = React.createRef();\n        if (xLeftover) {\n          xOffset = x;\n          xLeftover--;\n        }\n        if (yLeftover) {\n          yOffset = y;\n          yLeftover--;\n        }\n        this.tileRefs[`${x}-${y}`] = ref;\n        tiles[`${x}-${y}`] = (\n          <Tile\n            client={this.props.client}\n            coordinates={`${x},${y}`}\n            delete={this.delete}\n            dx={dx}\n            dy={dy}\n            funcElevator={this.saveTileCombiner}\n            image={puzzleImg}\n            groupRef={ref}\n            key={`${x},${y}`}\n            x= { (x * dx) + xOffset }\n            y= { (y * dy) + yOffset }\n          />\n        )\n      }\n    }\n    this.setState( {tiles} );\n  }\n\n  delete = (groupID) => {\n    let newTiles = { ...this.state.tiles}\n    delete newTiles[groupID]\n    this.setState( {tiles: newTiles} )\n  }\n\n  doneLoadingPic = (e) => {\n    this.createTiles(9, 6, e.target);\n    this.setState(\n      {\n        loadingPicture: false,\n      }\n    )\n    this.props.client.on('combine', (group1ID, group2ID, joinTileID) => this.combineGroups(group1ID, group2ID, joinTileID));\n    this.props.client.on('move', (groupID, newX, newY) => this.moveGroup(groupID, newX, newY));\n  }\n\n  combineGroups = (group1ID, group2ID, joinTileID) => {\n    let combiner = this.tileCombiners[group1ID];\n    let joinFrom = this.tileRefs[group2ID];\n    combiner(document.getElementById( joinTileID ), joinFrom.current, false);\n  }\n\n  moveGroup = (groupID, newX, newY) => {\n    let group = this.tileRefs[groupID];\n    group.current.style.left = newX;\n    group.current.style.top = newY;\n  }\n\n  render() {\n    if (this.state.loadingPicture) {\n      let puzzleImg = <img src={rainbow} onLoad={this.doneLoadingPic} />\n      return (\n        <>\n          <h1>Loading</h1>\n          {puzzleImg}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {Object.values( this.state.tiles )}\n      </>\n    )\n  }\n\n  saveTileCombiner = (groupID, combiner) => {\n    this.tileCombiners[groupID] = combiner;\n  }\n}\n\nexport default Puzzle;\n","import App from './Components/App/App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}